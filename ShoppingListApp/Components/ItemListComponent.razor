@inject ItemsClient Client;
@inject NavigationManager NavigationManager

<div class="card p-3 m-auto w-75 mt-3 text-center mb-4">

    <h3 class="p-1 text-decoration-underline">List</h3>

    @if(items.Count <= 0)
    {
        <div class="d-flex justify-content-center align-content-center flex-column p-4">
            <p class="fs-5 fst-italic fw-bold">There are no items in the shopping list.</p>
        </div>
    }
    else
    {
        <ul class="list-unstyled my-2">
            @foreach (Item item in items)
            {
                <li class="d-flex justify-content-between align-items-center fs-5 w-50 m-auto">
                    <div>
                        <InputCheckbox @bind-Value="item.IsPicked" @onchange="() => handleCheck(item.Id)" />
                        @item.Name
                    </div>
                    <div>
                        <span role="button" class="text-primary mx-1" @onclick="() =>handleEdit(item.Id)">
                            <i class="bi bi-pencil-square"></i>
                        </span>
                        <span role="button" class="text-danger mx-1" @onclick="() => handleDelete(item.Id)">
                            <i class="bi bi-trash-fill"></i>
                        </span>
                    </div>
                </li>
            }
        </ul>
    }    
</div>


@code {
    private List<Item> items { get; set; } = new();

    protected override void OnInitialized()
    {
        items = Client.GetItems;
    }

    private void handleCheck(int Id)
    {
        Client.UpdatePicked(Id);
    }

    private void handleEdit(int Id)
    {
        NavigationManager.NavigateTo($"/editItem/{Id}");
    }

    private void handleDelete(int Id)
    {
        Client.DeleteItem(Id);
    }
}
